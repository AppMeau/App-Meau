# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build APK

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - uses: mskelton/setup-yarn@v1
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '21'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    - run: yarn
    - run: npm install eas-cli -g
    - run: npm install expo -g
    - run: echo "EXPO_PUBLIC_API_KEY=${{ secrets.EXPO_PUBLIC_API_KEY }}" > .env
    - run: echo "EXPO_PUBLIC_AUTH_DOMAIN=${{ secrets.EXPO_PUBLIC_AUTH_DOMAIN }}" > .env
    - run: echo "EXPO_PUBLIC_PROJECT_ID=${{ secrets.EXPO_PUBLIC_PROJECT_ID }}" > .env
    - run: echo "EXPO_PUBLIC_STORAGE_BUCKET=${{ secrets.EXPO_PUBLIC_STORAGE_BUCKET }}" > .env
    - run: echo "EXPO_PUBLIC_APP_ID=${{ secrets.EXPO_PUBLIC_APP_ID }}" > .env
    - run: EXPO_TOKEN=${{ secrets.EXPO_TOKEN }} eas build --platform android --profile development --local
    - run: mv ./build*.apk ./appmeau.apk
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: appmeau.apk

